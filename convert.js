
// 10
// 6.5429
//
const map = {
    H: "m 6.7857 -4.8571 q 0 -0.1429 0.1429 -0.1429 l 0.4714 0 q 0.1429 0 0.1429 0.1429 l 0 9.7142 q 0 0.1429 -0.1429 0.1429 l -0.4714 0 q -0.1429 0 -0.1429 -0.1429 l 0 -4.4857 q 0 -0.0571 -0.0571 -0.0571 l -4.9143 0 q -0.0572 0 -0.0572 0.0571 l 0 4.4857 q 0 0.1429 -0.1428 0.1429 l -0.4714 0 q -0.1429 0 -0.1429 -0.1429 l 0 -9.7142 q 0 -0.1429 0.1429 -0.1429 l 0.4714 0 q 0.1428 0 0.1428 0.1429 l 0 4.4428 q 0 0.0572 0.0572 0.0572 l 4.9143 0 q 0.0571 0 0.0571 -0.0572 l 0 -4.4428 z",
    L: "m 1.1429 5 q -0.1429 0 -0.1429 -0.1429 l 0 -9.7142 q 0 -0.1429 0.1429 -0.1429 l 0.4714 0 q 0.1429 0 0.1429 0.1429 l 0 9.1285 q 0 0.0572 0.0571 0.0572 l 5.1286 0 q 0.1429 0 0.1429 0.1428 l 0 0.3857 q 0 0.1429 -0.1429 0.1429 l -5.8 0 z",
    E: "m 7.3715 -4.4714 q 0 0.1429 -0.1429 0.1429 l -5.4143 0 q -0.0571 0 -0.0571 0.0571 l 0 3.8571 q 0 0.0571 0.0571 0.0571 l 3.8429 0 q 0.1429 0 0.1429 0.1429 l 0 0.3857 q 0 0.1429 -0.1429 0.1429 l -3.8429 0 q -0.0571 0 -0.0571 0.0571 l 0 3.9 q 0 0.0571 0.0571 0.0571 l 5.4143 0 q 0.1429 0 0.1429 0.1429 l 0 0.3857 q 0 0.1429 -0.1429 0.1429 l -6.0857 0 q -0.1429 0 -0.1429 -0.1429 l 0 -9.7143 q 0 -0.1429 0.1429 -0.1429 l 6.0857 0 q 0.1429 0 0.1429 0.1429 l 0 0.3857 z",
    O: "m 4.2627 5.113 q -0.9746 0 -1.7161 -0.4025 q -0.7415 -0.4025 -1.1441 -1.1299 q -0.4025 -0.7274 -0.4025 -1.6737 l 0 -3.7006 q 0 -0.9463 0.4025 -1.6737 q 0.4025 -0.7274 1.1441 -1.1299 q 0.7415 -0.4025 1.7161 -0.4025 q 0.9746 0 1.7232 0.4025 q 0.7486 0.4025 1.1582 1.1299 q 0.4096 0.7274 0.4096 1.6737 l 0 3.7006 q 0 0.9463 -0.4096 1.6737 q -0.4096 0.7274 -1.1582 1.1299 q -0.7486 0.4025 -1.7232 0.4025 m 0 -0.6497 q 1.1441 0 1.8432 -0.6921 q 0.6992 -0.6921 0.6992 -1.8362 l 0 -3.7429 q 0 -1.1299 -0.6992 -1.8291 q -0.6992 -0.6992 -1.8432 -0.6992 q -1.1299 0 -1.822 0.6992 q -0.6921 0.6992 -0.6921 1.8291 l 0 3.7429 q 0 1.1441 0.6921 1.8362 q 0.6921 0.6921 1.822 0.6921 z",
    W: "m 3.9571 5 q -0.1143 0 -0.1571 -0.1143 l -2.7857 -9.7286 l -0.0143 -0.0429 q 0 -0.1143 0.1429 -0.1143 l 0.4857 0 q 0.1143 0 0.1571 0.1143 l 2.3714 8.3286 q 0.0143 0.0286 0.0357 0.0286 q 0.0214 0 0.0357 -0.0286 l 2.2 -8.3143 q 0.0286 -0.1286 0.1571 -0.1286 l 0.5 0 q 0.1286 0 0.1571 0.1286 l 2.2714 8.3143 q 0.0143 0.0286 0.0357 0.0286 q 0.0214 0 0.0357 -0.0286 l 2.4 -8.3286 q 0.0429 -0.1143 0.1571 -0.1143 l 0.4571 0 q 0.0714 0 0.1071 0.0429 q 0.0357 0.0429 0.0214 0.1143 l -2.7857 9.7286 q -0.0429 0.1143 -0.1571 0.1143 l -0.5 0 q -0.1286 0 -0.1571 -0.1286 l -2.2429 -8.4714 q -0.0143 -0.0286 -0.0357 -0.0286 q -0.0214 0 -0.0357 0.0286 l -2.2286 8.4714 q -0.0286 0.1286 -0.1571 0.1286 l -0.4714 0 z",
}

function parseLine(arr, isFirst) {
    arr[0] = (isFirst ? ", [ " : ", ") + arr[0].toUpperCase();

    if (arr[1]) {
        arr[1] = " (" + arr[1] + ", ";
        arr[2] += ")";
    }

    if (arr[3]) {
        arr[3] = " (" + arr[3] + ", ";
        arr[4] += ")"
    }

    return arr.join("");
}

function inv(str) {
    if (str[0] === "-") {
        let tmp = str.split('');
        tmp.splice(0, 1);
        return tmp.join('');
    }

    return "-" + str;
}



for (let c in map) {
    let s = map[c];
    let b = s.split(/(?=[mqlz])/);

    let undoMoves = [];

    console.log(", ( '" + c + "'");
    for (let i = 0; i < b.length; i++) {
        let c = b[i].split(" ");

        if (c[0] === "m") {
            let copy = c.slice();
            copy[1] = inv(copy[1]);
            copy[2] = inv(copy[2]);
            undoMoves.push(parseLine(copy));
        }

        b[i] = parseLine(c, i == 0);
    }
    while (undoMoves.length > 0) {
        b.push(undoMoves.pop());
    }
    console.log(b.join("\n"))
    console.log("]")
    console.log(")")
}
